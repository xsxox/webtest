<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>教师投票系统</title>
  <style>
    /* 保持原样式不变 */
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    body {
      font-family: "微软雅黑", Arial, sans-serif;
      background-color: #f5f7fa;
      color: #333;
      line-height: 1.6;
      padding: 20px;
    }
    
    .container {
      max-width: 800px;
      margin: 0 auto;
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
      padding: 30px;
    }
    
    h1 {
      color: #2c3e50;
      margin-bottom: 30px;
      font-size: 28px;
      text-align: center;
    }
    
    .vote-table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }
    
    .vote-table th {
      background-color: #3498db;
      color: white;
      font-weight: bold;
      padding: 15px;
      text-align: left;
    }
    
    .vote-table td {
      padding: 15px;
      border-bottom: 1px solid #eee;
    }
    
    .vote-table tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    
    .vote-table tr:hover {
      background-color: #f1f8ff;
    }
    
    .vote-btn {
      background-color: #3498db;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 14px;
      transition: background-color 0.3s;
    }
    
    .vote-btn:hover {
      background-color: #2980b9;
    }
    
    .vote-btn:disabled {
      background-color: #95a5a6;
      cursor: not-allowed;
    }
    
    .vote-count {
      font-weight: bold;
      color: #2c3e50;
    }
    
    .total-votes {
      margin-top: 20px;
      text-align: center;
      font-size: 16px;
      color: #7f8c8d;
    }
    
    .teacher-name {
      font-weight: bold;
      color: #2c3e50;
    }
    
    .loading {
      text-align: center;
      padding: 20px;
      color: #7f8c8d;
    }
    
    .error {
      color: #e74c3c;
      text-align: center;
      padding: 20px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>教师投票系统</h1>
    
    <table class="vote-table">
      <thead>
        <tr>
          <th>编号</th>
          <th>姓名</th>
          <th>得票数</th>
          <th>操作</th>
        </tr>
      </thead>
      <tbody id="teachers-container">
        <tr><td colspan="4" class="loading">加载中...</td></tr>
      </tbody>
    </table>
    
    <div class="total-votes">
      总投票数：<span id="total-votes">0</span> 票
    </div>
  </div>

  <script>
    // 生成用户唯一标识
    function generateUserToken() {
      return 'user_' + Math.random().toString(36).substring(2, 15) + 
             Math.random().toString(36).substring(2, 15);
    }

    // 获取或生成用户标识
    let userToken = localStorage.getItem('userToken');
    if (!userToken) {
      userToken = generateUserToken();
      localStorage.setItem('userToken', userToken);
    }

    // 全局数据存储
    let appData = {
      teachers: [],
      totalVotes: 0
    };

    // 客户端已投票记录
    let votedTeachers = JSON.parse(localStorage.getItem('votedTeachers') || '{}');

    // 渲染教师表格
    function renderTeachers() {
      const container = document.getElementById('teachers-container');
      const { teachers } = appData;

      if (teachers.length === 0) {
        container.innerHTML = '<tr><td colspan="4" class="error">暂无教师数据</td></tr>';
        return;
      }

      let html = '';
      teachers.forEach(teacher => {
        const isVoted = votedTeachers[teacher.id] === true;
        html += `
          <tr data-id="${teacher.id}">
            <td>${teacher.id}</td>
            <td class="teacher-name">${teacher.name}</td>
            <td><span class="vote-count">${teacher.votes} 票</span></td>
            <td>
              <button 
                class="vote-btn" 
                data-id="${teacher.id}" 
                ${isVoted ? 'disabled' : ''}
              >
                ${isVoted ? '已投票' : '投票'}
              </button>
            </td>
          </tr>
        `;
      });
      container.innerHTML = html;
    }

    // 更新总票数
    function updateTotalVotes() {
      document.getElementById('total-votes').textContent = appData.totalVotes;
    }

    // 获取初始数据
    function fetchInitialData() {
      fetch('/api/data')
        .then(response => response.ok ? response.json() : Promise.reject())
        .then(data => {
          if (data.success) {
            appData.teachers = data.teachers;
            appData.totalVotes = data.totalVotes;
            renderTeachers();
            updateTotalVotes();
          }
        })
        .catch(() => {
          document.getElementById('teachers-container').innerHTML = 
            '<tr><td colspan="4" class="error">数据加载失败，请刷新重试</td></tr>';
        });
    }

    // 处理投票
    function handleVote(teacherId) {
      if (votedTeachers[teacherId]) {
        alert('您已对该教师投过票~');
        return;
      }

      fetch('/vote', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `teacherId=${teacherId}&userToken=${userToken}`,
      })
      .then(response => response.ok ? response.json() : Promise.reject())
      .then(data => {
        if (data.success) {
          votedTeachers[teacherId] = true;
          localStorage.setItem('votedTeachers', JSON.stringify(votedTeachers));
          
          appData.teachers = data.teachers;
          appData.totalVotes = data.totalVotes;
          renderTeachers();
          updateTotalVotes();
          alert('投票成功！');
        } else {
          alert(data.message || '投票失败');
        }
      })
      .catch(() => {
        alert('网络异常，投票失败');
      });
    }

    // 页面加载初始化：先检测服务器是否重启
    document.addEventListener('DOMContentLoaded', () => {
      // 1. 先请求服务器启动时间，判断是否重启
      fetch('/api/server-info')
        .then(response => response.json())
        .then(serverInfo => {
          const lastServerStartTime = localStorage.getItem('lastServerStartTime');
          const currentServerTime = serverInfo.serverStartTime.toString();

          // 若服务器启动时间变化（说明重启过），则清除本地投票记录
          if (lastServerStartTime !== currentServerTime) {
            console.log('检测到服务器重启，重置投票状态');
            localStorage.removeItem('votedTeachers'); // 清除已投票记录
            votedTeachers = {}; // 重置内存记录
            localStorage.setItem('lastServerStartTime', currentServerTime); // 更新本地记录的服务器启动时间
          }

          // 2. 加载教师数据
          fetchInitialData();
        })
        .catch(err => {
          console.error('获取服务器信息失败：', err);
          fetchInitialData(); // 即使失败也继续加载数据
        });

      // 3. 绑定投票事件
      document.querySelector('.vote-table').addEventListener('click', (e) => {
        if (e.target.classList.contains('vote-btn') && !e.target.disabled) {
          const teacherId = parseInt(e.target.getAttribute('data-id'));
          handleVote(teacherId);
        }
      });
    });
  </script>
</body>
</html>